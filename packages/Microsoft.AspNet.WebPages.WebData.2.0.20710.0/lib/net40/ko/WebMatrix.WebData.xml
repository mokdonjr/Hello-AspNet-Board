<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>WebMatrix.WebData</name>
  </assembly>
  <members>
    <member name="T:WebMatrix.WebData.ExtendedMembershipProvider">
      <summary>
        <see cref="T:System.Web.Security.MembershipProvider" /> 클래스에서 제공되는 멤버 자격 시스템을 확장하는 데 사용되는 추상 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.#ctor">
      <summary>파생 클래스에서 재정의되면 <see cref="T:WebMatrix.WebData.ExtendedMembershipProvider" /> 클래스의 새 인스턴스를 인스턴스화합니다.</summary>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.ConfirmAccount(System.String)">
      <summary>보류 중인 멤버 자격 계정을 활성화합니다.</summary>
      <returns>계정이 확인되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="accountConfirmationToken">인증 공급자에 전달할 확인 토큰입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.ConfirmAccount(System.String,System.String)">
      <summary>지정된 사용자의 보류 중인 멤버 자격 계정을 활성화합니다.</summary>
      <returns>계정이 확인되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="accountConfirmationToken">인증 공급자에 전달할 확인 토큰입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.CreateAccount(System.String,System.String)">
      <summary>지정된 사용자 이름 및 암호를 사용하여 새 사용자 계정을 만듭니다.</summary>
      <returns>계정을 확인하기 위해 사용자에게 보낼 수 있는 토큰입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="password">암호입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.CreateAccount(System.String,System.String,System.Boolean)">
      <summary>파생 클래스에서 재정의되면 지정된 사용자 이름 및 암호를 사용하여 새 사용자 계정을 만듭니다. 필요한 경우 새 계정을 확인해야 해당 계정을 사용할 수 있도록 합니다.</summary>
      <returns>계정을 확인하기 위해 사용자에게 보낼 수 있는 토큰입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="password">암호입니다.</param>
      <param name="requireConfirmationToken">(선택적 요소) 계정을 확인하도록 지정하려면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.CreateOrUpdateOAuthAccount(System.String,System.String,System.String)">
      <summary>파생 클래스에서 재정의되면 새 OAuth 멤버 자격 계정을 만들거나 기존 OAuth 멤버 자격 계정을 업데이트합니다.</summary>
      <param name="provider">OAuth 또는 OpenID 공급자입니다.</param>
      <param name="providerUserId">OAuth 또는 OpenID 공급자 사용자 ID입니다. 이 ID는 사용자 계정의 사용자 ID가 아니라 OAuth 또는 OpenID 공급자의 사용자 ID입니다.</param>
      <param name="userName">사용자 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.CreateUserAndAccount(System.String,System.String)">
      <summary>새 사용자 프로필과 새 멤버 자격 계정을 만듭니다.</summary>
      <returns>사용자 계정을 확인하기 위해 사용자에게 보낼 수 있는 토큰입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="password">암호입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.CreateUserAndAccount(System.String,System.String,System.Boolean)">
      <summary>새 사용자 프로필과 새 멤버 자격 계정을 만듭니다.</summary>
      <returns>사용자 계정을 확인하기 위해 사용자에게 보낼 수 있는 토큰입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="password">암호입니다.</param>
      <param name="requireConfirmation">(선택적 요소) 사용자 계정을 반드시 확인하도록 지정하려면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.CreateUserAndAccount(System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>파생 클래스에서 재정의되면 새 사용자 프로필과 새 멤버 자격 계정을 만듭니다.</summary>
      <returns>사용자 계정을 확인하기 위해 사용자에게 보낼 수 있는 토큰입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="password">암호입니다.</param>
      <param name="requireConfirmation">(선택적 요소) 사용자 계정을 반드시 확인하도록 지정하려면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</param>
      <param name="values">(선택적 요소) 사용자 프로필에 저장할 추가 사용자 특성을 포함하는 사전입니다. 기본값은 null입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.CreateUserAndAccount(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>파생 클래스에서 재정의되면 새 사용자 프로필과 새 멤버 자격 계정을 만듭니다.</summary>
      <returns>사용자 계정을 확인하기 위해 사용자에게 보낼 수 있는 토큰입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="password">암호입니다.</param>
      <param name="values">(선택적 요소) 사용자 프로필에 저장할 추가 사용자 특성을 포함하는 사전입니다. 기본값은 null입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.DeleteAccount(System.String)">
      <summary>파생 클래스에서 재정의되면 지정된 멤버 자격 계정을 삭제합니다.</summary>
      <returns>사용자 계정이 삭제되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.DeleteOAuthAccount(System.String,System.String)">
      <summary>파생 클래스에서 재정의되면 지정된 공급자 이름 및 공급자 사용자 ID가 있는 OAuth 또는 OpenID 계정을 삭제합니다.</summary>
      <param name="provider">OAuth 또는 OpenID 공급자의 이름입니다.</param>
      <param name="providerUserId">OAuth 또는 OpenID 공급자 사용자 ID입니다. 이 ID는 사용자 계정의 사용자 ID가 아니라 OAuth 또는 OpenID 공급자의 사용자 ID입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.DeleteOAuthToken(System.String)"></member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.GeneratePasswordResetToken(System.String)">
      <summary>전자 메일로 사용자에게 보낼 수 있는 암호 다시 설정 토큰을 생성합니다.</summary>
      <returns>사용자에게 보낼 토큰입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.GeneratePasswordResetToken(System.String,System.Int32)">
      <summary>파생 클래스에서 재정의되면 전자 메일로 사용자에게 보낼 수 있는 암호 다시 설정 토큰을 생성합니다.</summary>
      <returns>사용자에게 보낼 토큰입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="tokenExpirationInMinutesFromNow">(선택적 요소) 암호 다시 설정 토큰이 만료될 때까지의 시간(분)입니다. 기본값은 1440(24시간)입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.GetAccountsForUser(System.String)">
      <summary>파생 클래스에서 재정의되면 지정된 사용자 이름과 연관된 모든 OAuth 멤버 자격 계정을 반환합니다.</summary>
      <returns>지정된 사용자 이름과 연관된 모든 OAuth 멤버 자격 계정 목록입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.GetCreateDate(System.String)">
      <summary>파생 클래스에서 재정의되면 지정된 사용자 계정을 만든 날짜와 시간을 반환합니다.</summary>
      <returns>계정을 만든 날짜와 시간입니다. 또는 계정 생성 날짜를 사용할 수 없는 경우 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
      <param name="userName">계정의 사용자 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.GetLastPasswordFailureDate(System.String)">
      <summary>파생 클래스에서 재정의되면 지정된 사용자 계정에 대해 잘못된 암호를 입력한 가장 최근 날짜와 시간을 반환합니다.</summary>
      <returns>이 사용자 계정에 대해 잘못된 암호를 입력한 가장 최근 날짜와 시간입니다. 또는 이 사용자 계정에 대해 잘못된 암호를 입력하지 않은 경우 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
      <param name="userName">계정의 사용자 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.GetOAuthTokenSecret(System.String)"></member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.GetPasswordChangedDate(System.String)">
      <summary>파생 클래스에서 재정의되면 지정된 멤버 자격 계정의 암호를 변경한 가장 최근 날짜와 시간을 반환합니다.</summary>
      <returns>멤버 자격 계정의 암호를 변경한 가장 최근 날짜와 시간입니다. 또는 이 사용자 계정의 암호를 변경한 적이 없는 경우 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
      <param name="userName">계정의 사용자 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.GetPasswordFailuresSinceLastSuccess(System.String)">
      <summary>파생 클래스에서 재정의되면 가장 최근에 로그인한 이후 또는 사용자 계정을 만든 이후에 지정된 사용자 계정의 암호를 잘못 입력한 횟수를 반환합니다.</summary>
      <returns>지정된 사용자 계정에 대해 실패한 암호 입력 시도 횟수입니다.</returns>
      <param name="userName">계정의 사용자 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.GetUserIdFromOAuth(System.String,System.String)">
      <summary>파생 클래스에서 재정의되면 지정된 OAuth 또는 OpenID 공급자의 사용자 ID 및 공급자 사용자 ID를 반환합니다.</summary>
      <param name="provider">OAuth 또는 OpenID 공급자의 이름입니다.</param>
      <param name="providerUserId">OAuth 또는 OpenID 공급자 사용자 ID입니다. 이 ID는 사용자 계정의 사용자 ID가 아니라 OAuth 또는 OpenID 공급자의 사용자 ID입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.GetUserIdFromPasswordResetToken(System.String)">
      <summary>파생 클래스에서 재정의되면 암호 다시 설정 토큰을 기준으로 사용자의 ID를 반환합니다.</summary>
      <returns>사용자 ID입니다.</returns>
      <param name="token">암호 다시 설정 토큰입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.GetUserNameFromId(System.Int32)">
      <summary>지정된 사용자 ID와 연관된 사용자 이름을 반환합니다.</summary>
      <returns>사용자 이름입니다.</returns>
      <param name="userId">이름을 가져올 사용자 ID입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.HasLocalAccount(System.Int32)"></member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.IsConfirmed(System.String)">
      <summary>파생 클래스에서 재정의되면 공급자가 사용자 계정을 확인했는지를 나타내는 값을 반환합니다.</summary>
      <returns>사용자가 확인되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.ReplaceOAuthRequestTokenWithAccessToken(System.String,System.String,System.String)"></member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.ResetPasswordWithToken(System.String,System.String)">
      <summary>파생 클래스에서 재정의되면 지정된 암호 다시 설정 토큰이 유효한지 확인한 후에 암호를 다시 설정합니다.</summary>
      <returns>암호를 변경했으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="token">암호 다시 설정 토큰입니다.</param>
      <param name="newPassword">새 암호입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.ExtendedMembershipProvider.StoreOAuthRequestToken(System.String,System.String)"></member>
    <member name="T:WebMatrix.WebData.FormsAuthenticationSettings">
      <summary>Web.config 파일의 &lt;appSettings&gt; 섹션에서 기본 설정을 재정의하는 키 이름을 정의합니다.</summary>
    </member>
    <member name="F:WebMatrix.WebData.FormsAuthenticationSettings.DefaultLoginUrl">
      <summary>기본 로그인 URL에 액세스할 키입니다.</summary>
    </member>
    <member name="F:WebMatrix.WebData.FormsAuthenticationSettings.LoginUrlKey">
      <summary>로그인 URL 키에 액세스할 키입니다.</summary>
    </member>
    <member name="F:WebMatrix.WebData.FormsAuthenticationSettings.PreserveLoginUrlKey">
      <summary>"login"이라는 용어를 "logon"으로 재정의하지 않고 그대로 유지하는 설정에 액세스할 키입니다.</summary>
    </member>
    <member name="T:WebMatrix.WebData.OAuthAccountData">
      <summary>OAuth 또는 OpenID 계정을 나타냅니다.</summary>
    </member>
    <member name="M:WebMatrix.WebData.OAuthAccountData.#ctor(System.String,System.String)">
      <summary>지정된 OAuth 또는 OpenID 공급자 및 공급자 사용자 ID를 사용하여 <see cref="T:WebMatrix.WebData.OAuthAccountData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider">공급자입니다.</param>
      <param name="providerUserId">공급자 사용자 ID입니다.</param>
    </member>
    <member name="P:WebMatrix.WebData.OAuthAccountData.Provider">
      <summary>OAuth 또는 OpenID 공급자 이름을 가져옵니다.</summary>
      <returns>공급자 이름입니다.</returns>
    </member>
    <member name="P:WebMatrix.WebData.OAuthAccountData.ProviderUserId">
      <summary>OAuth 또는 OpenID 공급자 사용자 ID를 가져옵니다.</summary>
      <returns>공급자 사용자 ID입니다.</returns>
    </member>
    <member name="T:WebMatrix.WebData.PreApplicationStartCode">
      <summary>단순 멤버 자격 응용 프로그램 시작 전 코드에 대한 등록 지점을 제공합니다.</summary>
    </member>
    <member name="M:WebMatrix.WebData.PreApplicationStartCode.Start">
      <summary>단순 멤버 자격 응용 프로그램 시작 전 코드를 등록합니다.</summary>
    </member>
    <member name="T:WebMatrix.WebData.SimpleMembershipProvider">
      <summary>계정 만들기, 계정 삭제, 암호 관리 등 웹 사이트 멤버 자격 작업에 대한 지원을 제공합니다.</summary>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.#ctor">
      <summary>
        <see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.#ctor(System.Web.Security.MembershipProvider)">
      <summary>지정된 멤버 자격 공급자를 사용하여 <see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="previousProvider">사용할 멤버 자격 공급자입니다.</param>
    </member>
    <member name="P:WebMatrix.WebData.SimpleMembershipProvider.ApplicationName">
      <summary>응용 프로그램의 이름을 가져오거나 설정합니다.</summary>
      <returns>응용 프로그램의 이름입니다.</returns>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.ChangePassword(System.String,System.String,System.String)">
      <summary>지정된 멤버 자격 계정의 암호를 변경합니다.</summary>
      <returns>암호를 변경했으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="username">사용자 이름입니다.</param>
      <param name="oldPassword">이전 암호입니다.</param>
      <param name="newPassword">새 암호입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
      <summary>지정된 계정에 대한 암호 질문과 대답을 변경합니다.</summary>
      <returns>암호 질문과 대답을 변경했으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="username">사용자 이름입니다.</param>
      <param name="password">새 암호입니다.</param>
      <param name="newPasswordQuestion">사용자가 암호를 변경하려면 대답해야 하는 보안 질문입니다.</param>
      <param name="newPasswordAnswer">보안 질문에 대한 대답입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.ConfirmAccount(System.String)">
      <summary>보류 중인 멤버 자격 계정을 활성화합니다.</summary>
      <returns>사용자 계정이 확인되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="accountConfirmationToken">인증 공급자에 전달할 확인 토큰입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 클래스가 <see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드 호출을 사용하여 초기화되지 않았습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.ConfirmAccount(System.String,System.String)">
      <returns>
        <see cref="T:System.Boolean" />을 반환합니다.</returns>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.CreateAccount(System.String,System.String,System.Boolean)">
      <summary>지정된 사용자 이름 및 암호를 사용하여 새 사용자 계정을 만듭니다.</summary>
      <returns>사용자 계정을 확인하기 위해 사용자에게 보낼 수 있는 토큰입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="password">암호입니다.</param>
      <param name="requireConfirmationToken">(선택적 요소) 사용자 계정을 반드시 확인하도록 지정하려면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</param>
      <exception cref="T:System.Web.Security.MembershipCreateUserException">
        <paramref name="username" />이 비어 있습니다.또는<paramref name="username" />에 이미 사용자 계정이 있습니다.또는<paramref name="password" />가 비어 있습니다.또는<paramref name="password" />가 128자보다 깁니다.또는<paramref name="username" />에 해당하는 사용자 레코드가 <see cref="P:WebMatrix.WebData.SimpleMembershipProvider.UserTableName" /> 테이블(사용자 프로필 테이블)에 없습니다.또는데이터베이스 작업에 실패했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 클래스가 <see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드 호출을 사용하여 초기화되지 않았습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.CreateOrUpdateOAuthAccount(System.String,System.String,System.String)">
      <summary>새 OAuth 멤버 자격 계정을 만들거나 기존 OAuth 멤버 자격 계정을 업데이트합니다.</summary>
      <param name="provider">OAuth 또는 OpenID 공급자입니다.</param>
      <param name="providerUserId">OAuth 또는 OpenID 공급자 사용자 ID입니다. 이 ID는 사용자 계정의 사용자 ID가 아니라 OAuth 또는 OpenID 공급자의 사용자 ID입니다.</param>
      <param name="userName">사용자 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 클래스가 <see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드 호출을 사용하여 초기화되지 않았습니다.</exception>
      <exception cref="T:System.Web.Security.MembershipCreateUserException">
        <paramref name="username" />이 비어 있습니다.또는<paramref name="username" />에 해당하는 사용자 레코드가 <see cref="P:WebMatrix.WebData.SimpleMembershipProvider.UserTableName" /> 테이블(사용자 프로필 테이블)에 없습니다.또는데이터베이스 작업에 실패했습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
      <summary>지정된 사용자를 멤버 자격 데이터베이스에 추가합니다.</summary>
      <returns>새로 만든 사용자 계정에 대한 정보로 채워진 <see cref="T:System.Web.Security.MembershipUser" /> 개체입니다.</returns>
      <param name="username">새 사용자 계정의 사용자 이름입니다.</param>
      <param name="password">새 사용자 계정의 암호입니다.</param>
      <param name="email">새 사용자 계정의 전자 메일 주소입니다.</param>
      <param name="passwordQuestion">새 사용자 계정의 보안 질문입니다.</param>
      <param name="passwordAnswer">새 사용자 계정의 보안 질문에 대한 대답입니다.</param>
      <param name="isApproved">사용자 계정의 유효성 검사가 승인된 것으로 나타내려면 true이고, 그렇지 않으면 false입니다.</param>
      <param name="providerUserKey">사용자 계정에 대한 멤버 자격 데이터 소스의 고유한 식별자입니다.</param>
      <param name="status">이 메서드가 반환될 때 사용자 계정이 만들어졌음을 나타내는 <see cref="T:System.Web.Security.MembershipCreateStatus" /> 열거 값이 포함됩니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.CreateUserAndAccount(System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>새 사용자 프로필과 새 멤버 자격 계정을 만듭니다.</summary>
      <returns>사용자 계정을 확인하기 위해 사용자에게 보낼 수 있는 토큰입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="password">암호입니다.</param>
      <param name="requireConfirmation">(선택적 요소) <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.ConfirmAccount(System.String)" /> 메서드를 사용하여 사용자 계정을 반드시 확인하도록 지정하려면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다. </param>
      <param name="values">(선택적 요소) 새 사용자 프로필의 기본값으로 데이터 저장소에 추가할 수 있는 추가 키/값 쌍 특성을 포함하는 사전입니다. 각 항목의 키는 데이터베이스 열이고, 각 항목의 값은 열의 값입니다. 기본값은 null입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 클래스가 <see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드 호출을 사용하여 초기화되지 않았습니다.</exception>
      <exception cref="T:System.Web.Security.MembershipCreateUserException">이 사용자 이름의 멤버 자격 계정이 이미 멤버 자격 데이터베이스에 있습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.DeleteAccount(System.String)">
      <summary>지정된 멤버 자격 계정을 삭제합니다.</summary>
      <returns>사용자 계정이 삭제되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" />이 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 클래스가 <see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드 호출을 사용하여 초기화되지 않았습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.DeleteOAuthAccount(System.String,System.String)">
      <summary>지정된 공급자 이름 및 공급자 사용자 ID가 있는 OAuth 또는 OpenID 계정을 삭제합니다.</summary>
      <param name="provider">OAuth 또는 OpenID 공급자의 이름입니다.</param>
      <param name="providerUserId">OAuth 또는 OpenID 공급자 사용자 ID입니다. 이 ID는 사용자 계정의 사용자 ID가 아니라 OAuth 또는 OpenID 공급자의 사용자 ID입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 클래스가 <see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드 호출을 사용하여 초기화되지 않았습니다.</exception>
      <exception cref="T:System.Web.Security.MembershipCreateUserException">
        <paramref name="username" />이 비어 있습니다.또는<paramref name="username" />에 해당하는 사용자 레코드가 <see cref="P:WebMatrix.WebData.SimpleMembershipProvider.UserTableName" /> 테이블(사용자 프로필 테이블)에 없습니다.또는데이터베이스 작업에 실패했습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.DeleteOAuthToken(System.String)"></member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.DeleteUser(System.String,System.Boolean)">
      <summary>지정된 사용자 계정을 삭제하고, 필요에 따라 해당 사용자 계정과 관련된 모든 프로필 데이터를 삭제합니다.</summary>
      <returns>사용자 계정이 삭제되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="username">사용자 이름입니다.</param>
      <param name="deleteAllRelatedData">사용자와 관련된 프로필 데이터를 삭제하려면 true이고, 사용자와 관련된 데이터를 보존하려면 false입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" />이 null이거나 비어 있습니다.</exception>
    </member>
    <member name="P:WebMatrix.WebData.SimpleMembershipProvider.EnablePasswordReset">
      <summary>멤버 자격 공급자를 통해 사용자가 암호를 다시 설정할 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns>멤버 자격 공급자가 암호 다시 설정을 지원하면 true이고, 그렇지 않으면 false입니다. 기본값은 true입니다.</returns>
    </member>
    <member name="P:WebMatrix.WebData.SimpleMembershipProvider.EnablePasswordRetrieval">
      <summary>멤버 자격 공급자를 통해 사용자가 암호를 검색할 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns>멤버 자격 공급자가 암호 검색을 지원하면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</returns>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>전자 메일 주소가 지정된 전자 메일 주소와 일치하는 모든 사용자 계정을 반환합니다.</summary>
      <returns>
        <paramref name="pageIndex" />로 지정된 페이지에서 시작하는 <paramref name="pageSize" /> 사용자 계정의 페이지를 포함하는 컬렉션입니다.</returns>
      <param name="emailToMatch">검색할 전자 메일 주소입니다.</param>
      <param name="pageIndex">반환할 결과 페이지의 인덱스(0부터 시작)입니다.</param>
      <param name="pageSize">반환할 결과 페이지의 크기입니다.</param>
      <param name="totalRecords">이 메서드가 반환될 때 일치한 사용자 계정의 총 수가 포함됩니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>이름이 지정된 사용자 이름과 일치하는 모든 사용자 계정을 반환합니다.</summary>
      <returns>
        <paramref name="pageIndex" />로 지정된 페이지에서 시작하는 <paramref name="pageSize" /> 사용자 계정의 페이지를 포함하는 컬렉션입니다.</returns>
      <param name="usernameToMatch">검색할 사용자 이름입니다.</param>
      <param name="pageIndex">반환할 결과 페이지의 인덱스(0부터 시작)입니다.</param>
      <param name="pageSize">반환할 결과 페이지의 크기입니다.</param>
      <param name="totalRecords">이 메서드가 반환될 때 일치한 사용자의 총 수가 포함됩니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GeneratePasswordResetToken(System.String,System.Int32)">
      <summary>전자 메일로 사용자에게 보낼 수 있는 암호 다시 설정 토큰을 생성합니다.</summary>
      <returns>사용자에게 보낼 토큰입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="tokenExpirationInMinutesFromNow">(선택적 요소) 암호 다시 설정 토큰이 만료될 때까지의 시간(분)입니다. 기본값은 1440(24시간)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" />이 비어 있습니다.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">데이터베이스 작업에 실패했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 클래스가 <see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드 호출을 사용하여 초기화되지 않았습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetAccountsForUser(System.String)">
      <summary>지정된 사용자 이름과 연관된 모든 OAuth 멤버 자격 계정을 반환합니다.</summary>
      <returns>지정된 사용자 이름과 연관된 모든 OAuth 멤버 자격 계정 목록입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 클래스가 <see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드 호출을 사용하여 초기화되지 않았습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
      <summary>데이터 소스의 모든 사용자 계정을 반환합니다.</summary>
      <returns>
        <paramref name="pageIndex" />로 지정된 페이지에서 시작하는 <paramref name="pageSize" /> 사용자 계정의 페이지를 포함하는 컬렉션입니다.</returns>
      <param name="pageIndex">반환할 결과 페이지의 인덱스(0부터 시작)입니다.</param>
      <param name="pageSize">반환할 결과 페이지의 크기입니다.</param>
      <param name="totalRecords">이 메서드가 반환될 때 일치한 사용자 계정의 총 수가 포함됩니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetCreateDate(System.String)">
      <summary>지정된 사용자 계정을 만든 날짜와 시간을 반환합니다.</summary>
      <returns>사용자 계정을 만든 날짜와 시간입니다. 또는 사용자 계정 생성 날짜를 사용할 수 없는 경우 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
      <param name="userName">계정의 사용자 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="userName" />으로 지정된 사용자에게 사용자 계정이 없습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetLastPasswordFailureDate(System.String)">
      <summary>지정된 사용자 계정에 대해 잘못된 암호를 입력한 가장 최근 날짜와 시간을 반환합니다.</summary>
      <returns>이 사용자 계정에 대해 잘못된 암호를 입력한 가장 최근 날짜와 시간입니다. 또는 이 사용자 계정에 대해 잘못된 암호를 입력하지 않은 경우 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
      <param name="userName">계정의 사용자 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetNumberOfUsersOnline">
      <summary>현재 응용 프로그램에 액세스하고 있는 사용자 수를 반환합니다.</summary>
      <returns>현재 응용 프로그램에 액세스하고 있는 사용자 수입니다.</returns>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetOAuthTokenSecret(System.String)"></member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetPassword(System.String,System.String)">
      <summary>데이터 저장소에서 지정된 사용자 계정의 암호를 반환합니다.</summary>
      <returns>지정된 사용자 계정의 암호입니다.</returns>
      <param name="username">암호를 검색할 사용자입니다.</param>
      <param name="answer">암호 보안 질문에 대한 대답입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:WebMatrix.WebData.SimpleMembershipProvider.EnablePasswordRetrieval" />은 false입니다.</exception>
      <exception cref="T:System.Web.Security.MembershipPasswordException">
        <paramref name="answer" />가 사용자 계정에 대한 보안 대답과 일치하지 않고 <see cref="P:WebMatrix.WebData.SimpleMembershipProvider.RequiresQuestionAndAnswer" />가 true입니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetPasswordChangedDate(System.String)">
      <summary>지정된 멤버 자격 계정의 암호를 변경한 가장 최근 날짜와 시간을 반환합니다.</summary>
      <returns>이 계정의 암호를 변경한 가장 최근 날짜와 시간입니다. 또는 이 멤버 자격 계정의 암호를 변경한 적이 없는 경우 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
      <param name="userName">계정의 사용자 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="userName" />으로 지정된 사용자에게 멤버 자격 계정이 없습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetPasswordFailuresSinceLastSuccess(System.String)">
      <summary>가장 최근에 로그인한 이후 또는 사용자 계정을 만든 이후에 지정된 사용자 계정의 암호를 잘못 입력한 횟수를 반환합니다.</summary>
      <returns>지정된 사용자 계정에 대해 실패한 암호 입력 시도 횟수입니다. 또는 <paramref name="userName" />으로 지정된 사용자에게 사용자 계정이 없는 경우 -1입니다.</returns>
      <param name="userName">계정의 사용자 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetUser(System.Object,System.Boolean)">
      <summary>지정된 사용자 ID를 사용하여 사용자 계정에 대한 정보를 반환하고, 필요한 경우 사용자 계정의 가장 최근 활동에 대한 타임스탬프를 업데이트합니다.</summary>
      <returns>사용자 계정 정보로 채워지는 개체입니다. 또는 <paramref name="providerUserKey" />를 찾을 수 없는 경우 null입니다.</returns>
      <param name="providerUserKey">정보를 가져올 사용자 계정의 ID입니다. ID는 <see cref="T:System.Object" /> 인스턴스로 저장되는 <see cref="T:System.Int32" /> 값입니다.</param>
      <param name="userIsOnline">사용자 계정에 대한 마지막 활동 타임스탬프를 업데이트하려면 true이고, 타임스탬프를 업데이트하지 않은 상태에서 사용자 계정 정보를 반환하려면 false입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetUser(System.String,System.Boolean)">
      <summary>지정된 사용자 이름을 사용하여 사용자 계정에 대한 정보를 반환하고, 필요한 경우 사용자 계정의 가장 최근 활동에 대한 타임스탬프를 업데이트합니다.</summary>
      <returns>사용자 계정 정보로 채워지는 개체입니다. 또는 <paramref name="username" />을 찾을 수 없는 경우 null입니다.</returns>
      <param name="username">정보를 가져올 사용자의 이름입니다.</param>
      <param name="userIsOnline">사용자 계정에 대한 마지막 활동 타임스탬프를 업데이트하려면 true이고, 타임스탬프를 업데이트하지 않은 상태에서 사용자 계정 정보를 반환하려면 false입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetUserId(System.String)">
      <summary>지정된 사용자 이름을 기준으로 사용자 ID를 반환합니다.</summary>
      <returns>사용자 ID입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 클래스가 <see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드 호출을 사용하여 초기화되지 않았습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetUserIdFromOAuth(System.String,System.String)">
      <summary>지정된 OAuth 또는 OpenID 공급자의 사용자 ID 및 공급자 사용자 ID를 반환합니다.</summary>
      <returns>사용자 ID이거나, OAuth 또는 OpenID 공급자 사용자 ID와 연관된 사용자 ID가 없는 경우 -1입니다.</returns>
      <param name="provider">OAuth 또는 OpenID 공급자의 이름입니다.</param>
      <param name="providerUserId">OAuth 또는 OpenID 공급자 사용자 ID입니다. 이 ID는 사용자 계정의 사용자 ID가 아니라 OAuth 또는 OpenID 공급자의 사용자 ID입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetUserIdFromPasswordResetToken(System.String)">
      <summary>암호 다시 설정 토큰을 기준으로 사용자 ID를 반환합니다.</summary>
      <returns>사용자 ID입니다. 지정된 암호 다시 설정 토큰과 연관된 사용자 ID가 없는 경우 -1입니다.</returns>
      <param name="token">암호 다시 설정 토큰입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 클래스가 <see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드 호출을 사용하여 초기화되지 않았습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetUserNameByEmail(System.String)">
      <summary>지정된 전자 메일 주소와 연관된 사용자 이름을 반환합니다.</summary>
      <returns>지정된 전자 메일 주소와 연관된 사용자 이름입니다. 또는 일치하는 사용자 이름을 찾을 수 없는 경우 null입니다.</returns>
      <param name="email">검색할 전자 메일 주소입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.GetUserNameFromId(System.Int32)">
      <summary>지정된 사용자 ID와 연관된 사용자 이름을 반환합니다.</summary>
      <returns>사용자 이름입니다.</returns>
      <param name="userId">이름을 가져올 사용자 ID입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.HasLocalAccount(System.Int32)"></member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>공급자를 초기화합니다.</summary>
      <param name="name">공급자의 대화명입니다.</param>
      <param name="config">공급자별 특성을 나타내는 이름/값 쌍의 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="config" />가 null입니다.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">
        <paramref name="config" />는 인식할 수 없는 특성을 포함합니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.IsConfirmed(System.String)">
      <summary>공급자가 사용자 계정을 확인했는지를 나타내는 값을 반환합니다.</summary>
      <returns>사용자 계정이 확인되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="userName" />이 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 클래스가 <see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드 호출을 사용하여 초기화되지 않았습니다.</exception>
    </member>
    <member name="P:WebMatrix.WebData.SimpleMembershipProvider.MaxInvalidPasswordAttempts">
      <summary>멤버 자격 사용자를 잠그기 전에 허용되는 잘못된 암호 또는 암호 대답의 입력 시도 횟수를 가져옵니다.</summary>
      <returns>멤버 자격 사용자를 잠그기 전에 허용되는 잘못된 암호 또는 암호 대답의 입력 시도 횟수입니다.</returns>
    </member>
    <member name="P:WebMatrix.WebData.SimpleMembershipProvider.MinRequiredNonAlphanumericCharacters">
      <summary>암호에 포함해야 하는 최소 특수 문자(영숫자 이외의 문자)의 수를 가져옵니다.</summary>
      <returns>암호에 포함해야 하는 최소 특수 문자의 수입니다.</returns>
    </member>
    <member name="P:WebMatrix.WebData.SimpleMembershipProvider.MinRequiredPasswordLength">
      <summary>암호에 필요한 최소 길이를 가져옵니다.</summary>
      <returns>암호에 필요한 최소 길이입니다.</returns>
    </member>
    <member name="P:WebMatrix.WebData.SimpleMembershipProvider.PasswordAttemptWindow">
      <summary>사용자 계정을 잠그기 전에 잘못된 암호 또는 보안 질문 대답을 입력할 수 있는 최대 횟수가 허용되는 시간(분)을 가져옵니다.</summary>
      <returns>시간(분)입니다.</returns>
    </member>
    <member name="P:WebMatrix.WebData.SimpleMembershipProvider.PasswordFormat">
      <summary>강력한 암호의 형식을 나타내는 값을 가져옵니다.</summary>
      <returns>형식을 나타내는 열거 값 중 하나입니다.</returns>
    </member>
    <member name="P:WebMatrix.WebData.SimpleMembershipProvider.PasswordStrengthRegularExpression">
      <summary>암호 복잡성을 평가하는 데 사용되는 정규식을 가져옵니다.</summary>
      <returns>암호 복잡성을 평가하는 데 사용되는 정규식입니다.</returns>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.ReplaceOAuthRequestTokenWithAccessToken(System.String,System.String,System.String)"></member>
    <member name="P:WebMatrix.WebData.SimpleMembershipProvider.RequiresQuestionAndAnswer">
      <summary>멤버 자격 공급자를 통해 사용자가 암호 다시 설정 및 검색을 위한 보안 질문에 대답하도록 요구할지를 나타내는 값을 가져옵니다.</summary>
      <returns>보안 질문 대답이 필요하면 true이고, 그렇지 않으면 false입니다. 기본값은 true입니다.</returns>
    </member>
    <member name="P:WebMatrix.WebData.SimpleMembershipProvider.RequiresUniqueEmail">
      <summary>멤버 자격 공급자가 각 사용자 이름에 고유한 전자 메일 주소를 요구하도록 할 것인지를 나타내는 값을 가져옵니다.</summary>
      <returns>멤버 자격 공급자가 고유한 전자 메일 주소를 요구하면 true이고, 그렇지 않으면 false입니다. 기본값은 true입니다.</returns>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.ResetPassword(System.String,System.String)">
      <summary>사용자 계정의 암호를 자동으로 생성된 새 암호로 다시 설정합니다.</summary>
      <returns>지정된 사용자 계정의 새 암호입니다.</returns>
      <param name="username">암호를 다시 설정할 사용자 계정입니다.</param>
      <param name="answer">새 사용자의 보안 질문에 대한 대답입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:WebMatrix.WebData.SimpleMembershipProvider.EnablePasswordReset" />은 false입니다.</exception>
      <exception cref="T:System.Web.Security.MembershipPasswordException">
        <paramref name="answer" />가 멤버 자격 테이블의 사용자 계정에 대한 보안 대답과 일치하지 않고 <see cref="P:WebMatrix.WebData.SimpleMembershipProvider.RequiresQuestionAndAnswer" />가 true입니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.ResetPasswordWithToken(System.String,System.String)">
      <summary>지정된 암호 다시 설정 토큰이 유효한지 확인한 후에 암호를 다시 설정합니다.</summary>
      <returns>암호를 변경했으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="token">암호 다시 설정 토큰입니다.</param>
      <param name="newPassword">새 암호입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newPassword" />가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 클래스가 <see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드 호출을 사용하여 초기화되지 않았습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.StoreOAuthRequestToken(System.String,System.String)"></member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.UnlockUser(System.String)">
      <summary>사용자 계정의 잠금을 해제하여 멤버 자격 사용자의 유효성을 검사할 수 있습니다.</summary>
      <returns>사용자 계정의 잠금이 해제되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="userName">잠금을 해제할 사용자 계정을 가진 사용자입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
      <summary>사용자 정보를 업데이트합니다.</summary>
      <param name="user">업데이트할 사용자 계정을 나타내는 개체 및 해당 사용자 계정에 대해 업데이트할 정보입니다.</param>
    </member>
    <member name="P:WebMatrix.WebData.SimpleMembershipProvider.UserIdColumn">
      <summary>사용자 ID를 포함하는 데이터베이스 열의 이름을 가져오거나 설정합니다.</summary>
      <returns>사용자 ID를 포함하는 데이터베이스 열의 이름입니다.</returns>
    </member>
    <member name="P:WebMatrix.WebData.SimpleMembershipProvider.UserNameColumn">
      <summary>사용자 이름을 포함하는 데이터베이스 열의 이름을 가져오거나 설정합니다.</summary>
      <returns>사용자 이름을 포함하는 데이터베이스 열의 이름입니다.</returns>
    </member>
    <member name="P:WebMatrix.WebData.SimpleMembershipProvider.UserTableName">
      <summary>사용자 정보를 포함하는 데이터베이스 테이블의 이름을 가져오거나 설정합니다.</summary>
      <returns>사용자 정보를 포함하는 데이터베이스 테이블의 이름입니다.</returns>
    </member>
    <member name="M:WebMatrix.WebData.SimpleMembershipProvider.ValidateUser(System.String,System.String)">
      <summary>지정된 사용자 계정과 암호가 있는지 확인합니다.</summary>
      <returns>지정된 사용자 이름과 암호가 있고 계정이 확인되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="username">유효성을 검사할 사용자 계정의 이름입니다.</param>
      <param name="password">지정된 사용자의 암호입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> 또는 <paramref name="password" />가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="T:WebMatrix.WebData.SimpleRoleProvider">
      <summary>기본 역할 관리 기능을 제공합니다.</summary>
    </member>
    <member name="M:WebMatrix.WebData.SimpleRoleProvider.#ctor">
      <summary>
        <see cref="T:WebMatrix.WebData.SimpleRoleProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:WebMatrix.WebData.SimpleRoleProvider.#ctor(System.Web.Security.RoleProvider)">
      <summary>지정된 역할 공급자를 사용하여 <see cref="T:WebMatrix.WebData.SimpleRoleProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="previousProvider">이전 역할 공급자입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleRoleProvider.AddUsersToRoles(System.String[],System.String[])">
      <summary>지정된 사용자 이름을 지정된 역할에 추가합니다.</summary>
      <param name="usernames">추가할 사용자 이름입니다.</param>
      <param name="roleNames">이름을 추가할 역할입니다.</param>
      <exception cref="T:System.InvalidOperationException">한 명 이상의 지정된 사용자가 이미 하나 이상의 지정된 역할에 있습니다.</exception>
    </member>
    <member name="P:WebMatrix.WebData.SimpleRoleProvider.ApplicationName">
      <summary>역할 정보를 저장하고 검색할 응용 프로그램의 이름을 가져오거나 설정합니다.</summary>
      <returns>역할 정보를 저장하고 검색할 응용 프로그램의 이름입니다.</returns>
    </member>
    <member name="M:WebMatrix.WebData.SimpleRoleProvider.CreateRole(System.String)">
      <summary>새 역할을 추가합니다.</summary>
      <param name="roleName">만들 역할의 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">역할이 이미 있습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleRoleProvider.DeleteRole(System.String,System.Boolean)">
      <summary>지정된 역할을 삭제합니다.</summary>
      <returns>역할이 삭제되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="roleName">삭제할 역할의 이름입니다.</param>
      <param name="throwOnPopulatedRole">한 명 이상의 사용자가 <paramref name="roleName" />에 있는 경우 예외를 throw하려면 true입니다. 이 경우 지정된 역할이 삭제되지 않습니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="roleName" />에 한 명 이상의 멤버가 있고 <paramref name="throwOnPopulatedRole" />이 true입니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleRoleProvider.FindUsersInRole(System.String,System.String)">
      <summary>지정된 역할에 있는 지정된 사용자를 모두 반환합니다.</summary>
      <returns>사용자 이름이 <paramref name="usernameToMatch" />와 일치하고 사용자가 지정된 역할에 있는 모든 사용자의 이름입니다.</returns>
      <param name="roleName">검색할 역할입니다.</param>
      <param name="usernameToMatch">검색할 사용자 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleRoleProvider.GetAllRoles">
      <summary>모든 역할 목록을 반환합니다.</summary>
      <returns>모든 역할의 이름입니다.</returns>
    </member>
    <member name="M:WebMatrix.WebData.SimpleRoleProvider.GetRolesForUser(System.String)">
      <summary>지정된 사용자가 속해 있는 역할의 목록을 반환합니다.</summary>
      <returns>지정된 사용자가 멤버로 있는 모든 역할의 이름입니다.</returns>
      <param name="username">역할 목록을 반환할 사용자입니다.</param>
      <exception cref="T:System.InvalidOperationException">지정된 사용자에게 멤버 자격 계정이 없습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleRoleProvider.GetUsersInRole(System.String)">
      <summary>지정된 역할에 있는 사용자 이름을 반환합니다.</summary>
      <returns>지정된 역할에 있는 사용자 이름입니다.</returns>
      <param name="roleName">역할의 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleRoleProvider.IsUserInRole(System.String,System.String)">
      <summary>지정된 사용자가 지정된 역할에 있는지를 나타내는 값을 반환합니다.</summary>
      <returns>사용자가 해당 역할에 있으면 true이고, 그렇지 않으면 false입니다. </returns>
      <param name="username">사용자 이름입니다.</param>
      <param name="roleName">역할의 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.SimpleRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
      <summary>지정된 역할에서 지정된 사용자 이름을 제거합니다.</summary>
      <param name="usernames">지정된 역할에서 제거할 사용자 이름입니다.</param>
      <param name="roleNames">지정된 사용자 이름을 제거할 역할 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">지정된 역할 중 하나 이상이 없습니다.또는한 명 이상의 사용자가 지정된 모든 역할에 없습니다.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">데이터베이스 작업에 실패했습니다.</exception>
    </member>
    <member name="M:WebMatrix.WebData.SimpleRoleProvider.RoleExists(System.String)">
      <summary>지정된 역할이 있는지를 나타내는 값을 반환합니다.</summary>
      <returns>역할이 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="roleName">역할의 이름입니다.</param>
    </member>
    <member name="P:WebMatrix.WebData.SimpleRoleProvider.UserIdColumn">
      <summary>사용자 ID를 포함하는 데이터베이스 열의 이름을 가져옵니다.</summary>
      <returns>사용자 ID를 포함하는 <see cref="P:WebMatrix.WebData.SimpleRoleProvider.UserTableName" /> 테이블의 데이터베이스 열 이름입니다.</returns>
    </member>
    <member name="P:WebMatrix.WebData.SimpleRoleProvider.UserNameColumn">
      <summary>사용자 이름을 포함하는 데이터베이스 열의 이름을 가져옵니다.</summary>
      <returns>사용자 이름을 포함하는 <see cref="P:WebMatrix.WebData.SimpleRoleProvider.UserTableName" /> 테이블의 데이터베이스 열 이름입니다.</returns>
    </member>
    <member name="P:WebMatrix.WebData.SimpleRoleProvider.UserTableName">
      <summary>사용자 정보를 포함하는 데이터베이스 테이블의 이름을 가져옵니다.</summary>
      <returns>사용자 정보를 포함하는 <see cref="P:WebMatrix.WebData.SimpleRoleProvider.UserTableName" /> 테이블의 데이터베이스 테이블 이름입니다.</returns>
    </member>
    <member name="T:WebMatrix.WebData.WebSecurity">
      <summary>사용자 계정을 만들고, 사용자를 로그인/로그아웃하며, 암호를 다시 설정하거나 변경하고, 관련 작업을 수행하는 등 ASP.NET 웹 페이지 응용 프로그램에 보안 및 인증을 제공합니다.</summary>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.ChangePassword(System.String,System.String,System.String)">
      <summary>지정된 사용자의 암호를 변경합니다.</summary>
      <returns>암호를 변경했으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="currentPassword">사용자의 현재 암호입니다.</param>
      <param name="newPassword">새 암호입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.ConfirmAccount(System.String)">
      <summary>계정이 올바른지 확인하고 계정을 활성화합니다.</summary>
      <returns>계정이 확인되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="accountConfirmationToken">인증 공급자에 전달할 확인 토큰입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.ConfirmAccount(System.String,System.String)">
      <summary>지정된 사용자 이름의 계정이 올바른지 확인하고 계정을 활성화합니다.</summary>
      <returns>계정이 확인되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="accountConfirmationToken">인증 공급자에 전달할 확인 토큰입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.CreateAccount(System.String,System.String,System.Boolean)">
      <summary>지정된 사용자 이름 및 암호를 사용하여 새 멤버 자격 계정을 만들고, 필요한 경우 사용자가 명시적으로 계정을 반드시 확인하도록 지정할 수 있습니다.</summary>
      <returns>계정을 확인하기 위해 사용자에게 보낼 수 있는 토큰입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="password">암호입니다.</param>
      <param name="requireConfirmationToken">(선택적 요소) 토큰 반환 값을 사용하여 계정을 반드시 확인하도록 지정하려면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다. </param>
      <exception cref="T:System.Web.Security.MembershipCreateUserException">
        <paramref name="username" />이 비어 있습니다.또는<paramref name="username" />에 이미 멤버 자격 계정이 있습니다.또는<paramref name="password" />가 비어 있습니다.또는<paramref name="password" />가 너무 깁니다.또는데이터베이스 작업에 실패했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.CreateUserAndAccount(System.String,System.String,System.Object,System.Boolean)">
      <summary>새 사용자 프로필 항목 및 새 멤버 자격 계정을 만듭니다.</summary>
      <returns>사용자 계정을 확인하기 위해 사용자에게 보낼 수 있는 토큰입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="password">사용자의 암호입니다.</param>
      <param name="propertyValues">(선택적 요소) 추가 사용자 특성을 포함하는 사전입니다. 기본값은 null입니다.</param>
      <param name="requireConfirmationToken">(선택적 요소) 사용자 계정을 반드시 확인하도록 지정하려면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="P:WebMatrix.WebData.WebSecurity.CurrentUserId">
      <summary>현재 사용자의 ID를 가져옵니다.</summary>
      <returns>현재 사용자의 ID입니다.</returns>
    </member>
    <member name="P:WebMatrix.WebData.WebSecurity.CurrentUserName">
      <summary>현재 사용자의 사용자 이름을 가져옵니다.</summary>
      <returns>현재 사용자의 이름입니다.</returns>
    </member>
    <member name="F:WebMatrix.WebData.WebSecurity.EnableSimpleMembershipKey">
      <summary>
        <see cref="P:System.Configuration.ConfigurationManager.AppSettings" /> 속성의 enableSimpleMembership 값에 대한 키를 나타냅니다.</summary>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.GeneratePasswordResetToken(System.String,System.Int32)">
      <summary>전자 메일로 사용자에게 보낼 수 있는 암호 다시 설정 토큰을 생성합니다.</summary>
      <returns>사용자에게 보낼 토큰입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="tokenExpirationInMinutesFromNow">(선택적 요소) 암호 다시 설정 토큰이 만료될 때까지의 시간(분)입니다. 기본값은 1440(24시간)입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.GetCreateDate(System.String)">
      <summary>지정된 멤버 자격 계정을 만든 날짜와 시간을 반환합니다.</summary>
      <returns>멤버 자격 계정을 만든 날짜와 시간입니다. 또는 계정 생성 날짜를 사용할 수 없는 경우 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
      <param name="userName">멤버 자격 계정의 사용자 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.GetLastPasswordFailureDate(System.String)">
      <summary>지정된 계정에 대해 잘못된 암호를 입력한 가장 최근 날짜와 시간을 반환합니다.</summary>
      <returns>이 계정에 대해 잘못된 암호를 입력한 가장 최근 날짜와 시간입니다. 또는 이 계정에 대해 잘못된 암호를 입력하지 않은 경우 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
      <param name="userName">멤버 자격 계정의 사용자 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.GetPasswordChangedDate(System.String)">
      <summary>지정된 멤버 자격 계정의 암호를 변경한 가장 최근 날짜와 시간을 반환합니다.</summary>
      <returns>암호를 변경한 가장 최근 날짜와 시간입니다. 또는 이 계정의 암호를 변경하지 않은 경우 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
      <param name="userName">계정의 사용자 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.GetPasswordFailuresSinceLastSuccess(System.String)">
      <summary>마지막으로 로그인한 이후 또는 멤버 자격 계정을 만든 이후에 지정된 계정의 암호를 잘못 입력한 횟수를 반환합니다.</summary>
      <returns>지정된 계정의 실패한 암호 입력 시도 횟수입니다.</returns>
      <param name="userName">계정의 사용자 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.GetUserId(System.String)">
      <summary>지정된 사용자 이름을 기준으로 사용자 ID를 반환합니다.</summary>
      <returns>사용자 ID입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.GetUserIdFromPasswordResetToken(System.String)">
      <summary>암호 다시 설정 토큰에서 사용자 ID를 반환합니다.</summary>
      <returns>사용자 ID입니다.</returns>
      <param name="token">암호 다시 설정 토큰입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="P:WebMatrix.WebData.WebSecurity.HasUserId">
      <summary>현재 사용자에게 사용자 ID가 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns>사용자에게 사용자 ID가 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:WebMatrix.WebData.WebSecurity.Initialized">
      <summary>
        <see cref="M:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection(System.String,System.String,System.String,System.String,System.Boolean)" /> 메서드가 호출되었는지를 나타내는 값을 가져옵니다.</summary>
      <returns>초기화 메서드가 호출되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>사용자 정보를 포함하는 데이터베이스에 연결하여 멤버 자격 시스템을 초기화합니다. 필요한 경우 아직 멤버 자격 테이블이 없으면 만듭니다.</summary>
      <param name="connectionStringName">사용자 정보를 포함하는 데이터베이스의 연결 문자열 이름입니다. SQL Server Compact를 사용하는 경우 이 이름은 .sdf 파일 이름 확장명이 없는 데이터베이스 파일(.sdf 파일)의 이름일 수 있습니다.</param>
      <param name="userTableName">사용자 프로필 정보를 포함하는 데이터베이스 테이블의 이름입니다.</param>
      <param name="userIdColumn">사용자 ID를 포함하는 데이터베이스 열의 이름입니다. 이 열은 정수(int)로 입력되어야 합니다.</param>
      <param name="userNameColumn">사용자 이름을 포함하는 데이터베이스 열의 이름입니다. 이 열은 멤버 자격 계정 데이터와 사용자 프로필 데이터를 일치시키는 데 사용됩니다.</param>
      <param name="autoCreateTables">사용자 프로필 테이블과 멤버 자격 테이블이 없는 경우 해당 테이블을 만들도록 나타내려면 true이고, 해당 테이블을 자동으로 만들지 않도록 나타내려면 false입니다. 멤버 자격 테이블은 자동으로 만들 수 있지만 데이터베이스 자체는 이미 있어야 합니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>지정된 멤버 자격이나 역할 공급자를 사용하여 사용자 정보를 포함하는 데이터베이스에 연결해 멤버 자격 시스템을 초기화합니다. 필요한 경우 아직 멤버 자격 테이블이 없으면 만듭니다.</summary>
      <param name="connectionString">사용자 정보를 포함하는 데이터베이스의 연결 문자열 이름입니다. SQL Server Compact를 사용하는 경우 이 이름은 .sdf 파일 이름 확장명이 없는 데이터베이스 파일(.sdf 파일)의 이름일 수 있습니다.</param>
      <param name="providerName">ADO.NET 데이터 공급자의 이름입니다. Microsoft SQL Server를 사용하려면 <see cref="M:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection(System.String,System.String,System.String,System.String,System.Boolean)" /> 오버로드가 권장됩니다.</param>
      <param name="userTableName">사용자 프로필 정보를 포함하는 데이터베이스 테이블의 이름입니다.</param>
      <param name="userIdColumn">사용자 ID를 포함하는 데이터베이스 열의 이름입니다. 이 열은 정수(int)로 입력되어야 합니다.</param>
      <param name="userNameColumn">사용자 이름을 포함하는 데이터베이스 열의 이름입니다. 이 열은 멤버 자격 계정 데이터와 사용자 프로필 데이터를 일치시키는 데 사용됩니다.</param>
      <param name="autoCreateTables">사용자 프로필 테이블과 멤버 자격 테이블을 자동으로 만들도록 나타내려면 true이고, 해당 테이블을 자동으로 만들지 않도록 나타내려면 false입니다. 멤버 자격 테이블은 자동으로 만들 수 있지만 데이터베이스 자체는 이미 있어야 합니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.IsAccountLockedOut(System.String,System.Int32,System.Int32)">
      <summary>지정된 시간(초) 동안 실패한 암호 입력 시도 횟수가 너무 많아서 지정된 멤버 자격 계정이 일시적으로 잠겨 있는지를 나타내는 값을 반환합니다.</summary>
      <returns>멤버 자격 계정이 잠겨 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="userName">멤버 자격 계정의 사용자 이름입니다.</param>
      <param name="allowedPasswordAttempts">멤버 자격 계정이 잠기기 전에 사용자에게 허용되는 암호 입력 시도 횟수입니다.</param>
      <param name="intervalInSeconds">암호 입력 시도 횟수가 <paramref name="allowedPasswordAttempts" /> 매개 변수의 값을 초과하면 사용자 계정을 잠글 시간(초)입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.IsAccountLockedOut(System.String,System.Int32,System.TimeSpan)">
      <summary>지정된 시간 범위 동안 실패한 암호 입력 시도 횟수가 너무 많아서 지정된 멤버 자격 계정이 일시적으로 잠겨 있는지를 나타내는 값을 반환합니다.</summary>
      <returns>멤버 자격 계정이 잠겨 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="userName">멤버 자격 계정의 사용자 이름입니다.</param>
      <param name="allowedPasswordAttempts">멤버 자격 계정이 잠기기 전에 사용자에게 허용되는 암호 입력 시도 횟수입니다.</param>
      <param name="interval">암호 입력 시도 횟수가 <paramref name="allowedPasswordAttempts" /> 매개 변수의 값을 초과하면 사용자 계정을 잠글 시간(초)입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="P:WebMatrix.WebData.WebSecurity.IsAuthenticated">
      <summary>현재 사용자의 인증 상태를 가져옵니다.</summary>
      <returns>현재 사용자가 인증되었으면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</returns>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.IsConfirmed(System.String)">
      <summary>사용자가 확인되었는지를 나타내는 값을 반환합니다.</summary>
      <returns>사용자가 확인되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="userName">사용자 이름입니다.</param>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.IsCurrentUser(System.String)">
      <summary>로그인한 사용자의 사용자 이름이 지정된 사용자 이름과 일치하는지를 나타내는 값을 반환합니다.</summary>
      <returns>로그인한 사용자 이름이 <paramref name="userName" />과 일치하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="userName">로그인한 사용자 이름과 비교할 사용자 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.Login(System.String,System.String,System.Boolean)">
      <summary>사용자를 로그인합니다.</summary>
      <returns>사용자가 로그인되었으면 true이고, 그렇지 않으면 false입니다. </returns>
      <param name="userName">사용자 이름입니다.</param>
      <param name="password">암호입니다.</param>
      <param name="persistCookie">(선택적 요소) 현재 세션 이후에 쿠키의 인증 토큰이 지속되도록 지정하려면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.Logout">
      <summary>사용자를 로그아웃합니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.RequireAuthenticatedUser">
      <summary>사용자가 인증되지 않은 경우 HTTP 상태를 401(권한 없음)로 설정합니다.</summary>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.RequireRoles(System.String[])">
      <summary>현재 사용자가 지정된 모든 역할에 없으면 HTTP 상태 코드를 401(권한 없음)로 설정합니다.</summary>
      <param name="roles">확인할 역할입니다. 현재 사용자가 이 매개 변수에 전달되는 모든 역할에 있어야 합니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.RequireUser(System.Int32)">
      <summary>지정된 사용자가 로그온되지 않은 경우 HTTP 상태를 401(권한 없음)로 설정합니다.</summary>
      <param name="userId">비교할 사용자의 ID입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.RequireUser(System.String)">
      <summary>현재 사용자가 지정된 사용자 이름과 일치하지 않는 경우 HTTP 상태를 401(권한 없음)로 설정합니다.</summary>
      <param name="userName">비교할 사용자의 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.ResetPassword(System.String,System.String)">
      <summary>암호 다시 설정 토큰을 사용하여 암호를 다시 설정합니다.</summary>
      <returns>암호를 변경했으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="passwordResetToken">암호 다시 설정 토큰입니다.</param>
      <param name="newPassword">새 암호입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
    <member name="M:WebMatrix.WebData.WebSecurity.UserExists(System.String)">
      <summary>지정된 사용자가 멤버 자격 데이터베이스에 있는지를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="username" />이 사용자 프로필 테이블에 있으면 true이고, 그렇지 않으면 false입니다. </returns>
      <param name="userName">사용자 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:WebMatrix.WebData.SimpleMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드가 호출되지 않았습니다.또는<see cref="Overload:WebMatrix.WebData.WebSecurity.InitializeDatabaseConnection" /> 메서드가 호출되지 않았습니다.또는<see cref="T:WebMatrix.WebData.SimpleMembershipProvider" /> 멤버 자격 공급자가 사이트 구성에 등록되지 않았습니다. 자세한 내용은 사이트의 시스템 관리자에게 문의하십시오.</exception>
    </member>
  </members>
</doc>